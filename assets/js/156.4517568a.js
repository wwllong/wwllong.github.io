(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{804:function(s,a,t){"use strict";t.r(a);var n=t(58),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jvm架构模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm架构模型"}},[s._v("#")]),s._v(" JVM架构模型")]),s._v(" "),t("h2",{attrs:{id:"jvm-整体结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-整体结构"}},[s._v("#")]),s._v(" JVM 整体结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://qiniu.wenwl.site/notes/jvm/jvm_framework_2.png",alt:"jvm_framework_2.png"}})]),s._v(" "),t("ul",[t("li",[s._v("HotSpot VM是目前市面上高性能虚拟机的代表作之一。")]),s._v(" "),t("li",[s._v("它采用解释器与即时编译器并存的架构。")]),s._v(" "),t("li",[s._v("在今天，Java程序的运行性能早已脱胎换骨，已经达到了可以和C/C++程序一较高下的地步。")])]),s._v(" "),t("h2",{attrs:{id:"java代码执行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java代码执行流程"}},[s._v("#")]),s._v(" Java代码执行流程")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://qiniu.wenwl.site/notes/jvm/jvm_framework_1.png",alt:"jvm_framework_1.png"}})]),s._v(" "),t("h2",{attrs:{id:"栈的指令集架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈的指令集架构"}},[s._v("#")]),s._v(" 栈的指令集架构")]),s._v(" "),t("p",[s._v("Java编译器输入的指令流基本上是一种基于栈的指令集架构，另外一种指令集架构则是基于寄存器的指令集架构。")]),s._v(" "),t("p",[s._v("具体来说，这两种架构之间的区别：")]),s._v(" "),t("p",[s._v("基于栈式架构的特点")]),s._v(" "),t("ul",[t("li",[s._v("设计和实现更简单，适用于资源受限的系统")]),s._v(" "),t("li",[s._v("避开了寄存器的分配难题：使用零地址指令方式分配")]),s._v(" "),t("li",[s._v("指令流中的指令大部分是零地址指令，其执行过程依赖于操作栈。指令集更小，编译器容易实现")]),s._v(" "),t("li",[s._v("不需要硬件支持，可移植性更好，更好实现跨平台")])]),s._v(" "),t("p",[s._v("基于寄存器架构的特点")]),s._v(" "),t("ul",[t("li",[s._v("典型的应用是x86的二进制指令集：比如传统的PC以及Android的Davlik虚拟机")]),s._v(" "),t("li",[s._v("指令集架构则完全依赖硬件，可移植性差")]),s._v(" "),t("li",[s._v("性能优秀和执行更高效")]),s._v(" "),t("li",[s._v("花费更少的指令去完成一项操作")]),s._v(" "),t("li",[s._v("在大部分情况下，基于寄存器架构的指令集往往都以一地址指令、二地址指令和三地址指令为主，而基于栈式架构的指令集却是以零地址指令为主")])]),s._v(" "),t("p",[s._v("举例1:")]),s._v(" "),t("p",[s._v("同样执行2+3这种逻辑操作，其指令分别如下：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 基于栈的计算流程（以Java虚拟机为例）：")]),s._v("\niconst_2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//常量2入栈")]),s._v("\nistore_1\niconst_3 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 常量3入栈")]),s._v("\nistore_2\niload_1\niload_2\niadd "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//常量2/3出栈，执行相加")]),s._v("\nistore_0 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结果5入栈")]),s._v("\n而基于寄存器的计算流程\nmov eax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将eax寄存器的值设为1")]),s._v("\nadd eax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使eax寄存器的值加3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 而基于寄存器的计算流程：")]),s._v("\nmov eax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将eax寄存器的值设为1")]),s._v("\nadd eax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使eax寄存器的值加3")]),s._v("\n")])])]),t("p",[s._v("举例2:")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("calc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" javap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("calc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Code")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Stack")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Locals")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Args_size")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" bipush        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" istore_1\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" sipush        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" istore_2\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" sipush        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" istore_3\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_1\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_2\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iadd\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" iload_3\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" imul\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ireturn\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的。优点是跨平台，指令集小，编译器容易实现，缺点是性能下降，实现同样的功能需要更多的指令。")]),s._v(" "),t("p",[s._v("时至今日，尽管嵌入式平台已经不是Java程序的主流运行平台了（准确来说应该是HotSpotVM的宿主环境已经不局限于嵌入式平台了），那么为什么不将架构更换为基于寄存器的架构呢？")]),s._v(" "),t("p",[s._v("栈的设计和实现上更简单、资源受限情况下也可以使用，而且跨平台、指令集小、易实现的优点盖过了他的缺点。")])])}),[],!1,null,null,null);a.default=r.exports}}]);