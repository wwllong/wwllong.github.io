(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{657:function(t,_,v){t.exports=v.p+"assets/img/hystrix-dashboard-desc.4357096f.png"},992:function(t,_,v){"use strict";v.r(_);var a=v(58),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"hystrix-其他相关说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-其他相关说明"}},[t._v("#")]),t._v(" Hystrix 其他相关说明")]),t._v(" "),a("p",[t._v("Hystrix 其他相关说明。")]),t._v(" "),a("h2",{attrs:{id:"什么情况下会触发熔断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下会触发熔断"}},[t._v("#")]),t._v(" 什么情况下会触发熔断")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("触发 fallback")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("EMIT")]),t._v(" "),a("td",[t._v("值传递")]),t._v(" "),a("td",[t._v("NO")])]),t._v(" "),a("tr",[a("td",[t._v("SUCCESS")]),t._v(" "),a("td",[t._v("执行完成，没有错误")]),t._v(" "),a("td",[t._v("NO")])]),t._v(" "),a("tr",[a("td",[t._v("FAILURE")]),t._v(" "),a("td",[t._v("执行抛出异常")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("TIMEOUT")]),t._v(" "),a("td",[t._v("执行开始，但没有在允许的时间内完成")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("BAD_REQUEST")]),t._v(" "),a("td",[t._v("执行抛出 HystrixBadRequestException")]),t._v(" "),a("td",[t._v("NO")])]),t._v(" "),a("tr",[a("td",[t._v("SHORT_CIRCUITED")]),t._v(" "),a("td",[t._v("断路器打开，不尝试执行")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("THREAD_POOL_REJECTED")]),t._v(" "),a("td",[t._v("线程池拒绝，不尝试执行")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("SEMAPHORE_REJECTED")]),t._v(" "),a("td",[t._v("信号量拒绝，不尝试执行")]),t._v(" "),a("td",[t._v("YES")])])])]),t._v(" "),a("h2",{attrs:{id:"什么情况下会抛出异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下会抛出异常"}},[t._v("#")]),t._v(" 什么情况下会抛出异常")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("抛异常")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("FALLBACK_EMIT")]),t._v(" "),a("td",[t._v("Fallback 值传递")]),t._v(" "),a("td",[t._v("NO")])]),t._v(" "),a("tr",[a("td",[t._v("FALLBACK_SUCCESS")]),t._v(" "),a("td",[t._v("Fallback 执行完成，没有错误")]),t._v(" "),a("td",[t._v("NO")])]),t._v(" "),a("tr",[a("td",[t._v("FALLBACK_FAILURE")]),t._v(" "),a("td",[t._v("Fallback 执行抛出出错")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("FALLBACK_REJECTED")]),t._v(" "),a("td",[t._v("Fallback 信号量拒绝，不尝试执行")]),t._v(" "),a("td",[t._v("YES")])]),t._v(" "),a("tr",[a("td",[t._v("FALLBACK_MISSING")]),t._v(" "),a("td",[t._v("没有 Fallback 实例")]),t._v(" "),a("td",[t._v("YES")])])])]),t._v(" "),a("h2",{attrs:{id:"监控界面指标说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控界面指标说明"}},[t._v("#")]),t._v(" 监控界面指标说明")]),t._v(" "),a("p",[a("img",{attrs:{src:v(657),alt:"hystrix-dashboard-desc"}})]),t._v(" "),a("h2",{attrs:{id:"常用配置说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用配置说明"}},[t._v("#")]),t._v(" 常用配置说明")]),t._v(" "),a("p",[t._v("Hystrix的配置使用方法为在 Feign 接口的调用方法上增加注解，案例代码如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@HystrixCommand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("commandProperties "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@HystrixProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution.isolation.thread.timeoutInMilliseconds"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("下面列出了一些常用配置的说明，"),a("a",{attrs:{href:"https://github.com/Netflix/Hystrix/wiki/Configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多详细的配置参数说明见官网"),a("OutboundLink")],1),t._v("：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("超时时间（默认 1000ms，单位：ms）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("execution.isolation.thread.timeoutInMilliseconds")]),t._v("：在调用方配置，被该调用方的所有方法的超时时间都是该值，优先级低于下边的指定配置")]),t._v(" "),a("li",[a("code",[t._v("execution.isolation.thread.timeoutInMilliseconds")]),t._v("：在调用方配置，被该调用方的指定方法（HystrixCommandKey 方法名）的超时时间是该值")])])]),t._v(" "),a("li",[a("strong",[t._v("线程池核心线程数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("coreSize")]),t._v("：默认为 10")])])]),t._v(" "),a("li",[a("strong",[t._v("Queue")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("maxQueueSize")]),t._v("：最大排队长度。默认 -1，使用 "),a("code",[t._v("SynchronousQueue")]),t._v("。其他值则使用 "),a("code",[t._v("LinkedBlockingQueue")]),t._v("。如果要从 -1 换成其他值则需重启，即该值不能动态调整，若要动态调整，需要使用到下边这个配置")]),t._v(" "),a("li",[a("code",[t._v("queueSizeRejectionThreshold")]),t._v("：排队线程数量阈值，默认为 5，达到时拒绝，如果配置了该选项，队列的大小是该队列（"),a("strong",[t._v("注意：如果 "),a("code",[t._v("maxQueueSize=-1")]),t._v(" 的话，则该选项不起作用")]),t._v("）")])])]),t._v(" "),a("li",[a("strong",[t._v("断路器")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("circuitBreaker.requestVolumeThreshold")]),t._v("：当在配置时间窗口内达到此数量的失败后，进行短路。默认 20 个（10s 内请求失败数量达到 20 个，断路器开）")]),t._v(" "),a("li",[a("code",[t._v("circuitBreaker.sleepWindowInMilliseconds")]),t._v("：短路多久以后开始尝试是否恢复，默认 5s")]),t._v(" "),a("li",[a("code",[t._v("circuitBreaker.errorThresholdPercentage")]),t._v("：出错百分比阈值，当达到此阈值后，开始短路。默认 50%")])])]),t._v(" "),a("li",[a("strong",[t._v("fallback")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("fallback.isolation.semaphore.maxConcurrentRequests")]),t._v("：调用线程允许请求 "),a("code",[t._v("HystrixCommand.GetFallback()")]),t._v(" 的最大数量，默认 10。超出时将会有异常抛出，注意：该项配置对于 THREAD 隔离模式也起作用")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);