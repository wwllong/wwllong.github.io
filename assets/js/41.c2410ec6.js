(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{469:function(t,e,r){t.exports=r.p+"assets/img/docker_3.d1ace127.png"},470:function(t,e,r){t.exports=r.p+"assets/img/docker_frame.17746761.png"},758:function(t,e,r){"use strict";r.r(e);var a=r(58),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker-架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-架构"}},[t._v("#")]),t._v(" Docker 架构")]),t._v(" "),a("p",[t._v("本节简单介绍一下Docker的架构。")]),t._v(" "),a("h2",{attrs:{id:"docker引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker引擎"}},[t._v("#")]),t._v(" Docker引擎")]),t._v(" "),a("p",[t._v("Docker 引擎是一个包含以下主要组件的客户端服务器（C/S）应用程序。")]),t._v(" "),a("ul",[a("li",[t._v("Server Docker Daemon：一种服务器，它是一种称为守护进程并且长时间运行的程序。")]),t._v(" "),a("li",[t._v("REST API：用于指定程序可以用来与守护进程通信的接口，并指示它做什么。")]),t._v(" "),a("li",[t._v("Client Docker CLI：一个有命令行界面 (CLI) 工具的客户端。主要管理网络、容器、镜像、数据卷四个模块。")])]),t._v(" "),a("p",[t._v("Docker 引擎组件的流程如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:r(469),alt:"Docker 引擎"}})]),t._v(" "),a("h2",{attrs:{id:"docker系统架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker系统架构"}},[t._v("#")]),t._v(" Docker系统架构")]),t._v(" "),a("p",[t._v("由上述可知，Docker 使用客户端-服务器 (C/S) 架构模式，使用远程 API 来管理和创建 Docker 容器。")]),t._v(" "),a("p",[a("strong",[t._v("Docker 容器通过 Docker 镜像来创建。容器与镜像的关系类似于面向对象编程中的对象与类")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Docker")]),t._v(" "),a("th",[t._v("面向对象")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("容器")]),t._v(" "),a("td",[t._v("对象")])]),t._v(" "),a("tr",[a("td",[t._v("镜像")]),t._v(" "),a("td",[t._v("类")])])])]),t._v(" "),a("p",[t._v("Docker架构图以及介绍：")]),t._v(" "),a("p",[a("img",{attrs:{src:r(470),alt:"Docker_架构"}})]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("概念")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("镜像(Images)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 镜像是用于创建 Docker 容器的模板。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("容器(Container)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("容器是独立运行的一个或一组应用。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("客户端(Client)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 客户端通过命令行或者其他工具使用 "),a("a",{attrs:{href:"https://docs.docker.com/reference/api/docker_remote_api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker API "),a("OutboundLink")],1),t._v(" 与 Docker 的守护进程通信。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("主机(Docker Host)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("仓库(Registry)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。"),a("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),a("OutboundLink")],1),t._v(" 提供了庞大的镜像集合供使用")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);