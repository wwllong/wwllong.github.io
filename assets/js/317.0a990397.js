(window.webpackJsonp=window.webpackJsonp||[]).push([[317],{988:function(a,t,s){"use strict";s.r(t);var e=s(58),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"yaml-配置文件语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yaml-配置文件语言"}},[a._v("#")]),a._v(" YAML 配置文件语言")]),a._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),s("p",[a._v("YAML 是专门用来写配置文件的语言，非常简洁和强大，远比 JSON 格式方便。")]),a._v(" "),s("p",[a._v("YAML 语言的设计目标，就是方便人们读写。它实质上是一种通用的数据串行化格式。它的基本语法规则如下：")]),a._v(" "),s("ul",[s("li",[a._v("大小写敏感")]),a._v(" "),s("li",[a._v("使用缩进表示层级关系")]),a._v(" "),s("li",[a._v("缩进时不允许使用Tab键，只允许使用空格。")]),a._v(" "),s("li",[a._v("缩进的空格数目不重要，只要相同层级的元素左侧对齐即可")])]),a._v(" "),s("p",[s("code",[a._v("#")]),a._v(" 表示注释，从这个字符一直到行尾，都会被解析器忽略。")]),a._v(" "),s("p",[a._v("YAML 支持的数据结构有三种：")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）")])]),a._v(" "),s("li",[s("p",[a._v("数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）")])]),a._v(" "),s("li",[s("p",[a._v("纯量（scalars）：单个的、不可再分的值")])])]),a._v(" "),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),s("p",[a._v("对象的一组键值对，使用冒号结构表示")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("animal: pets\n")])])]),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),s("p",[a._v("一组连词线开头的行，构成一个数组")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("- Cat\n- Dog\n- Goldfish\n")])])]),s("p",[a._v("数据结构的子成员是一个数组，则可以在该项下面缩进一个空格")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("- Array\n - Cat\n - Dog\n - Goldfish\n")])])]),s("h2",{attrs:{id:"复合结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合结构"}},[a._v("#")]),a._v(" 复合结构")]),a._v(" "),s("p",[a._v("对象和数组可以结合使用，形成复合结构")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("languages:\n - Ruby\n - Perl\n - Python \nwebsites:\n YAML: yaml.org \n Ruby: ruby-lang.org \n Python: python.org \n Perl: use.perl.org \n")])])]),s("h2",{attrs:{id:"纯量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纯量"}},[a._v("#")]),a._v(" 纯量")]),a._v(" "),s("p",[a._v("纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量")]),a._v(" "),s("ul",[s("li",[a._v("字符串")]),a._v(" "),s("li",[a._v("布尔值")]),a._v(" "),s("li",[a._v("整数")]),a._v(" "),s("li",[a._v("浮点数")]),a._v(" "),s("li",[a._v("Null")]),a._v(" "),s("li",[a._v("时间")]),a._v(" "),s("li",[a._v("日期")])])])}),[],!1,null,null,null);t.default=v.exports}}]);