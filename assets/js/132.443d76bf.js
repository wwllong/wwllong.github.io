(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{769:function(a,s,t){"use strict";t.r(s);var e=t(58),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker-镜像基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像基本操作"}},[a._v("#")]),a._v(" Docker 镜像基本操作")]),a._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("p",[a._v("Docker 运行容器前需要本地存在对应的镜像，如果本地不存在该镜像，Docker 会从镜像仓库下载该镜像。")]),a._v(" "),t("h2",{attrs:{id:"获取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取镜像"}},[a._v("#")]),a._v(" 获取镜像")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://hub.docker.com/explore/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker Hub"),t("OutboundLink")],1),a._v(" 上有大量的高质量的镜像可以用，从 Docker 镜像仓库获取镜像的命令是 "),t("code",[a._v("docker pull")]),a._v("。其命令格式为：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Docker Registry 地址"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":端口号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("仓库名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":标签"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("具体的选项可以通过 "),t("code",[a._v("docker pull --help")]),a._v(" 命令看到，这里我们说一下镜像名称的格式。")]),a._v(" "),t("ul",[t("li",[a._v("Docker Registry 地址：即Docker 镜像仓库地址，地址的格式一般是 "),t("code",[a._v("<域名/IP>[:端口号]")]),a._v("。默认地址是 Docker Hub。")]),a._v(" "),t("li",[a._v("仓库名：这里的仓库名是两段式名称，即 "),t("code",[a._v("<用户名>/<软件名>")]),a._v("。对于 Docker Hub，如果不给出用户名，则默认为 "),t("code",[a._v("library")]),a._v("，也就是官方镜像。")])]),a._v(" "),t("p",[a._v("比如获取nginx的镜像：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("wenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull nginx\nUsing default tag: latest\nlatest: Pulling from library/nginx\n69692152171a: Pull complete \n49f7d34d62c1: Pull complete \n5f97dc5d71ab: Pull complete \ncfcd0711b93a: Pull complete \nbe6172d7651b: Pull complete \nde9813870342: Pull complete \nDigest: sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2\nStatus: Downloaded newer image "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" nginx:latest\ndocker.io/library/nginx:latest\n")])])]),t("p",[a._v("上面的命令中没有给出 Docker 镜像仓库地址，因此将会从 Docker Hub 获取镜像。而镜像名称是 "),t("code",[a._v("nginx")]),a._v("，由于没有配置标签，所以将会获取官方镜像 "),t("code",[a._v("library/nginx")]),a._v(" 仓库中标签为"),t("code",[a._v("latest")]),a._v(" 的镜像。")]),a._v(" "),t("p",[a._v("从下载过程中可以看到我们之前提及的分层存储的概念，镜像是由多层存储所构成。下载也是一层层的去下载，并非单一文件。下载过程中给出了每一层的 ID 的前 12 位。并且下载结束后，给出该镜像完整的 "),t("code",[a._v("sha256")]),a._v(" 的摘要，以确保下载一致性。")]),a._v(" "),t("p",[a._v("在使用上面命令的时候，你可能会发现，你所看到的层 ID 以及 "),t("code",[a._v("sha256")]),a._v(" 的摘要和这里的不一样。这是因为官方镜像是一直在维护的，有任何新的 bug或者版本更新，都会进行修复再以原来的标签发布，这样可以确保任何使用这个标签的用户可以获得更安全、更稳定的镜像。")]),a._v(" "),t("p",[a._v("如果从 Docker Hub 下载镜像非常缓慢，可以参照 "),t("RouterLink",{attrs:{to:"/docker/6-docker-accelerator.html"}},[a._v("Docker镜像加速器")]),a._v(" 一节。")],1),a._v(" "),t("h2",{attrs:{id:"镜像列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像列表"}},[a._v("#")]),a._v(" 镜像列表")]),a._v(" "),t("p",[a._v("列出已经下载下来的镜像，可以使用 "),t("code",[a._v("docker image ls")]),a._v(" 命令：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("wenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ntomcat              latest              c43a65faae57        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" days ago          667MB\nnginx               latest              f0b8a9a54136        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          133MB\nmysql               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v("                 2c9028880e58        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          447MB\nhello-world         latest              d1165f221234        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" months ago        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(".3kB\nredis               latest              50541622f4f1        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" months ago       104MB\nadminer             latest              d3d18514e50a        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" months ago       "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("89")]),a._v(".8MB\nmysql               latest              be0dbf01a0f3        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" months ago       541MB\nrabbitmq            "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.8")]),a._v(".3-management    867da7fcdf92        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(" months ago       181MB\n")])])]),t("p",[a._v("列表包含了仓库名、标签、镜像 ID、创建时间以及所占用的空间。")]),a._v(" "),t("p",[a._v("其中仓库名、标签在之前的基础概念章节已经介绍过了。"),t("strong",[a._v("镜像 ID")]),a._v(" 则是镜像的唯一标识，一个镜像可以对应多个"),t("strong",[a._v("标签")]),a._v("。因此，在上面的例子中，我们可以看到 "),t("code",[a._v("mysql:5.7")]),a._v(" 和 "),t("code",[a._v("mysql:latest")]),a._v(" 拥有相同的 ID，因为它们对应的是同一个镜像。")]),a._v(" "),t("h3",{attrs:{id:"镜像体积"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像体积"}},[a._v("#")]),a._v(" 镜像体积")]),a._v(" "),t("p",[a._v("如果仔细观察，会注意到，这里标识的所占用空间和在 Docker Hub 上看到的镜像大小不同。比如，"),t("code",[a._v("mysql:5.7")]),a._v(" 镜像大小，在这里是 "),t("code",[a._v("447MB")]),a._v("，但是在 "),t("a",{attrs:{href:"https://hub.docker.com/_/mysql?tab=tags&page=1&ordering=last_updated",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker Hub"),t("OutboundLink")],1),a._v(" 显示的却是 "),t("code",[a._v("147.28 MB")]),a._v("。这是因为 "),t("strong",[a._v("Docker Hub 中显示的体积是压缩后的体积")]),a._v("。在镜像下载和上传过程中镜像是保持着压缩状态的，因此 Docker Hub 所显示的大小是网络传输中更关心的流量大小。而 "),t("code",[a._v("docker image ls")]),a._v(" 显示的是镜像下载到本地后，"),t("strong",[a._v("展开后的各层所占空间的总和")]),a._v("，因为镜像到本地后，查看空间的时候，更关心的是本地磁盘空间占用的大小。")]),a._v(" "),t("p",[a._v("另外一个需要注意的问题是，"),t("strong",[t("code",[a._v("docker image ls")]),a._v(" 列表中的镜像体积总和并非是所有镜像实际硬盘消耗")]),a._v("。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。由于 Docker 使用 Union FS，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。")]),a._v(" "),t("p",[a._v("你可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("wenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" system "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("df")]),a._v("\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".094GB             "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("510")]),a._v(".9MB "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),a._v("%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nContainers          "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v(".38kB             "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(".611kB "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("21")]),a._v("%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nLocal Volumes       "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("                   0B                  0B\nBuild Cache         "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("                   0B                  0B\n\n")])])]),t("h3",{attrs:{id:"虚悬镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚悬镜像"}},[a._v("#")]),a._v(" 虚悬镜像")]),a._v(" "),t("p",[a._v("在查看镜像列表中，可能会出现 一些特殊的镜像，这些镜像既没有仓库名，也没有标签，均为 "),t("code",[a._v("<none>")]),a._v("。例如：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("               "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("              00285df0df87        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" days ago          "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("342")]),a._v(" MB\n")])])]),t("p",[a._v("这个镜像原本是有镜像名和标签的，原来为 "),t("code",[a._v("mongo:3.2")]),a._v("，随着官方镜像维护，发布了新版本后，重新 "),t("code",[a._v("docker pull mongo:3.2")]),a._v(" 时，"),t("code",[a._v("mongo:3.2")]),a._v(" 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了 "),t("code",[a._v("<none>")]),a._v("。"),t("strong",[a._v("除了 "),t("code",[a._v("docker pull")]),a._v(" 可能导致这种情况，"),t("code",[a._v("docker build")]),a._v(" 也同样可以导致这种现象。由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 "),t("code",[a._v("<none>")]),a._v(" 的镜像")]),a._v("。这类无标签镜像也被称为 "),t("strong",[a._v("虚悬镜像(dangling image)")]),a._v(" ，可以用下面的命令专门显示这类镜像：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -f "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("dangling")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("              "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("              00285df0df87        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" days ago          "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("342")]),a._v(" MB\n")])])]),t("p",[a._v("一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的，可以用下面的命令删除。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image prune\n")])])]),t("h3",{attrs:{id:"中间层镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中间层镜像"}},[a._v("#")]),a._v(" 中间层镜像")]),a._v(" "),t("p",[a._v("为了加速镜像构建、重复利用资源，Docker 会利用 "),t("strong",[a._v("中间层镜像")]),a._v("。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 "),t("code",[a._v("docker image ls")]),a._v(" 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 "),t("code",[a._v("-a")]),a._v(" 参数。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -a\n")])])]),t("p",[a._v("这样会看到很多无标签的镜像，与之前的虚悬镜像不同，这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。")]),a._v(" "),t("p",[a._v("实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们。只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除。")]),a._v(" "),t("h3",{attrs:{id:"镜像列表筛选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像列表筛选"}},[a._v("#")]),a._v(" 镜像列表筛选")]),a._v(" "),t("p",[t("code",[a._v("docker image ls")]),a._v(" 会列出所有顶级镜像，但是有时候我们只希望列出部分镜像。可参考以下指令参数：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 根据仓库名筛选")]),a._v("\nwenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" mysql\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmysql               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v("                 2c9028880e58        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          447MB\nmysql               latest              be0dbf01a0f3        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" months ago       541MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定仓库名和标签")]),a._v("\nwenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" mysql:5.7\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmysql               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v("                 2c9028880e58        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          447MB\n")])])]),t("p",[a._v("除此以外，还支持强大的过滤器参数 "),t("code",[a._v("--filter")]),a._v("或者简写 "),t("code",[a._v("-f")]),a._v("。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 希望看到在 `hello-world` 之后建立的镜像, since的反面是before")]),a._v("\nwenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -f "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("since")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("hello-world\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ntomcat              latest              c43a65faae57        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" days ago          667MB\nnginx               latest              f0b8a9a54136        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          133MB\nmysql               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v("                 2c9028880e58        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" days ago          447MB\n\n")])])]),t("p",[a._v("此外，如果镜像构建时，定义了 "),t("code",[a._v("LABEL")]),a._v("，还可以通过 "),t("code",[a._v("LABEL")]),a._v(" 来过滤。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -f "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("com.example.version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("h3",{attrs:{id:"特定格式显示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特定格式显示"}},[a._v("#")]),a._v(" 特定格式显示")]),a._v(" "),t("p",[a._v("默认情况下，"),t("code",[a._v("docker image ls")]),a._v(" 会输出一个完整的表格，但是我们并非所有时候都会需要这些内容。比如，刚才删除虚悬镜像的时候，我们需要利用 "),t("code",[a._v("docker image ls")]),a._v(" 把所有的虚悬镜像的 ID 列出来，然后才可以交给 "),t("code",[a._v("docker image rm")]),a._v(" 命令作为参数来删除指定的这些镜像，这个时候就用到了 "),t("code",[a._v("-q")]),a._v(" 参数。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 镜像ID列")]),a._v("\nwenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -q\nc43a65faae57\nf0b8a9a54136\n2c9028880e58\nd1165f221234\n50541622f4f1\nd3d18514e50a\nbe0dbf01a0f3\n867da7fcdf92\n")])])]),t("p",[t("strong",[t("code",[a._v("--filter")]),a._v(" 配合 "),t("code",[a._v("-q")]),a._v(" 产生出指定范围的 ID 列表，然后送给另一个 "),t("code",[a._v("docker")]),a._v(" 命令作为参数，从而针对这组镜像成批的进行某种操作")]),a._v("。这种做法在 Docker 命令行使用过程中非常常见，不仅仅是镜像，将来我们会在各个命令中看到这类搭配，以完成很强大的功能。因此每次在文档看到过滤器后，可以多注意一下它们的用法。")]),a._v(" "),t("p",[a._v("另外一些时候，我们可能只是对表格的结构不满意，希望自己组织列，或者不希望有标题，这样方便其它程序解析结果等，这就用到了 "),t("a",{attrs:{href:"https://gohugo.io/templates/go-templates/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Go 的模板语法"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[a._v("比如，下面的命令会直接列出镜像结果，并且只包含镜像ID和仓库名：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("wenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" --format "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{{.ID}}: {{.Repository}}"')]),a._v("\nc43a65faae57: tomcat\nf0b8a9a54136: nginx\n2c9028880e58: mysql\nd1165f221234: hello-world\n50541622f4f1: redis\nd3d18514e50a: adminer\nbe0dbf01a0f3: mysql\n867da7fcdf92: rabbitmq\n")])])]),t("p",[a._v("或者打算以表格等距显示，并且有标题行，和默认一样，不过自己定义列：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("wenwl@ubuntu:~$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" --format "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"table {{.ID}}'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("{{.Repository}}"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v('{{.Tag}}"')]),a._v("\nIMAGE ID            REPOSITORY          TAG\nc43a65faae57        tomcat              latest\nf0b8a9a54136        nginx               latest\n2c9028880e58        mysql               "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v("\nd1165f221234        hello-world         latest\n50541622f4f1        redis               latest\nd3d18514e50a        adminer             latest\nbe0dbf01a0f3        mysql               latest\n867da7fcdf92        rabbitmq            "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.8")]),a._v(".3-management\n")])])]),t("h2",{attrs:{id:"删除镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除镜像"}},[a._v("#")]),a._v(" 删除镜像")]),a._v(" "),t("p",[a._v("如果要删除本地的镜像，可以使用 "),t("code",[a._v("docker image rm")]),a._v(" 命令，其格式为：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("镜像"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("1")]),a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("镜像"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);