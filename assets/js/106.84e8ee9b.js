(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{714:function(t,s,a){"use strict";a.r(s);var n=a(58),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitlab-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[t._v("#")]),t._v(" GitLab Runner")]),t._v(" "),a("p",[t._v("在了解完GitLab持续集成的相关概念后，接着就要去了解怎么做了。")]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("p",[t._v("GitLab Runner 负责执行先前描述的构建任务。GitLab Runner 可以安装在不同的机器上，与GitLab CI是分开的，在构建任务运行期间并不会影响到 GitLab 的性能。")]),t._v(" "),a("p",[t._v("为什么不直接让GitLab CI来允许构建任务？因为一般来说，构建任务都会占用很多的系统资源 (譬如编译代码)，而 GitLab CI 又是 GitLab 的一部分，如果由 GitLab CI 来运行构建任务的话，在执行构建任务的时候，GitLab 的性能会大幅下降。此外，GitLab CI 最大的作用是管理各个项目的构建状态，因此，运行构建任务这种浪费资源的事情就交给 GitLab Runner 来做。")]),t._v(" "),a("h2",{attrs:{id:"安装-gitlab-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-gitlab-runner"}},[t._v("#")]),t._v(" 安装 GitLab Runner")]),t._v(" "),a("p",[t._v("所以一般情况下，会专门有一台专门用于部署的服务器。这里列出Ubuntu以及Ubuntu Docker安装GitLab Runner的方式：")]),t._v(" "),a("h3",{attrs:{id:"ubuntu安装脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装脚本"}},[t._v("#")]),t._v(" Ubuntu安装脚本")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gitlab-ci-multi-runner\n")])])]),a("h3",{attrs:{id:"docker安装脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker安装脚本"}},[t._v("#")]),t._v(" Docker安装脚本")]),t._v(" "),a("p",[t._v("我们也可是使用 Docker 来部署 GitLab Runner。")]),t._v(" "),a("p",[t._v("环境说明和准备：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("OS：Ubuntu 20.04.1 LTS")])]),t._v(" "),a("li",[a("p",[t._v("创建工作目录 "),a("code",[t._v("/usr/local/docker/runner")])])]),t._v(" "),a("li",[a("p",[t._v("创建构建目录 "),a("code",[t._v("/usr/local/docker/runner/environment")]),t._v("，并完成以下准备工作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("下载对应的 JDK 安装包并复制到"),a("code",[t._v("environment")]),t._v("目录")])]),t._v(" "),a("li",[a("p",[t._v("下载对应的 Maven 安装包并复制到"),a("code",[t._v("environment")]),t._v("目录")])]),t._v(" "),a("li",[a("p",[t._v("下载对应的 docker-compose 二进制执行文件并复制到"),a("code",[t._v("environment")]),t._v("目录")]),t._v(" "),a("p",[t._v("以上三步，也可以使用软件包的安装方式，但是不建议，因为下载需要时间、况且这种基本上很少会改变。(PS："),a("strong",[t._v("离线安装需要注意版本问题")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("创建 "),a("code",[t._v("daemon.json")]),t._v("，用于配置加速器和仓库地址")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip:port"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建 "),a("code",[t._v("init.sh")]),t._v("，用于初始化脚本，如果不需要进行一些权限配置，可忽略改步骤")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权限配置")]),t._v("\ngpasswd -a gitlab-runner root\ngpasswd -a gitlab-runner "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" root:root /var/run/docker.sock\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +775 /var/run/docker.sock\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mvn配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /home/gitlab-runner/.m2/repository\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R gitlab-runner /home/gitlab-runner/.m2/repository\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R gitlab-runner /usr/local/maven\n\nnewgrp root\nnewgrp "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建Dockerfile，仅供参考，例如gitlab-runner的版本、软件源的配置、JDK版本等等请根据自己实际情况修改。")]),t._v(" "),a("p",[t._v("注意此处有个坑，容器的里面的ubuntu版本与宿主机版本可能不一致，像我的宿主机环境Ubuntu版本为20.04.3 LTS、代号focal，而gitlab-runner容器里面是trusty，（进入容器交互，输入"),a("code",[t._v("lsb_release -cs")]),t._v("查看），导致我在修改软件源之后的操作都会出现问题。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("FROM gitlab/gitlab-runner:v10.6.0\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改软件源")]),t._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/apt/sources.list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update -y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" clean\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 Docker")]),t._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https ca-certificates "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" software-properties-common "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" apt-key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    add-apt-repository "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update -y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce\nCOPY daemon.json /etc/docker/daemon.json\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 Docker Compose")]),t._v("\nWORKDIR /usr/local/bin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RUN curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose")]),t._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" /usr/local/bin\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +551 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化脚本，例如进行一些权限配置，容器启动后手动执行")]),t._v("\nCOPY init.sh /usr/local/bin\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x init.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 Java")]),t._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/java\nWORKDIR /usr/local/java\nCOPY openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz /usr/local/java\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -fr openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 Maven")]),t._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p /usr/local/maven\nWORKDIR /usr/local/maven\nCOPY apache-maven-3.6.3-bin.tar.gz /usr/local/maven\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf apache-maven-3.6.3-bin.tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -fr apache-maven-3.6.3-bin.tar.gz\nCOPY settings.xml /usr/local/maven/apache-maven-3.6.3/conf/settings.xml\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置环境变量")]),t._v("\nENV JAVA_HOME /usr/local/java/java-se-8u41-ri\nENV MAVEN_HOME /usr/local/maven/apache-maven-3.6.3\nENV "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$JAVA_HOME")]),t._v("/bin:"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MAVEN_HOME")]),t._v("/bin\n\nWORKDIR /\n")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"docker-compose-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml"}},[t._v("#")]),t._v(" docker-compose.yml")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("/usr/local/docker/runner")]),t._v(" 目录下创建 "),a("code",[t._v("docker-compose.yml")]),t._v("，其中数据卷我将Maven的仓库持久化了，大家根据自己的"),a("code",[t._v("setting.xml")]),t._v("文件做改动即可。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab-runner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" environment\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitlab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/runner/config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/gitlab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/run/docker.sock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/run/docker.sock\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/docker/runner/m2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/home/gitlab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("runner/.m2/repository\n")])])]),a("p",[t._v("最后在当前目录下，执行"),a("code",[t._v("docker-compose up -d")]),t._v("命令，执行成功后，GitLab Runner 就安装完成了，可以参考以下命令执行：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up -d\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nCreating gitlab-runner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器启动成功后，如果配置了初始化脚本，可以执行以下命令执行脚本")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it gitlab-runner init.sh\nAdding user gitlab-runner to group root\n")])])]),a("p",[t._v("安装的其他配置补充：在某些场景下为保证能够正常集成，我们可能还需要一些其它配置，建议将这些步骤写入到"),a("code",[t._v("init.sh")]),t._v("中：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("账户权限问题：安装完 GitLab Runner 后，系统会增加一个 gitlab-runner 账户，每次集成的操作 GitLab Runner 都是用这个 账户操作的。我们将它加进 root 组：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 账户权限配置")]),t._v("\ngpasswd -a gitlab-runner root\nnewgrp root\n")])])])]),t._v(" "),a("li",[a("p",[t._v("操作目录权限问题，gitlab-runner 账号可能没有操作某些文件的权限情况下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 配置操作目录的权限")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("775")]),t._v(" xxx\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"注册-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册-runner"}},[t._v("#")]),t._v(" 注册 Runner")]),t._v(" "),a("p",[t._v("参考以下步骤，为"),a("strong",[t._v("每个项目注册Runner")]),t._v("。")]),t._v(" "),a("p",[t._v("PS：每个项目的注册令牌，见项目->设置->CI/CD->Runners 设置->展开。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行注册命令")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it gitlab-runner gitlab-runner register\nRunning "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" system-mode.                            \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入 GitLab CI 地址                                                    ")]),t._v("\nPlease enter the gitlab-ci coordinator URL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e.g. https://gitlab.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\nhttp://192.168.0.111:8080/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入 GitLab CI Token")]),t._v("\nPlease enter the gitlab-ci token "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner:\nrUTY3xFPYPdSCxY7uTqs\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入 Runner 的说明，可以为空，建议给个合理的描述，便于区分")]),t._v("\nPlease enter the gitlab-ci description "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner:\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ecbcddf05373"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码上传后会触发构建，这里true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to run untagged builds [true/false]:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [false]: true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 Tag，可以用于指定在构建规定的 tag 时触发 ci")]),t._v("\nPlease enter the gitlab-ci tags "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this runner "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comma separated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里选择 false")]),t._v("\nWhether to lock the Runner to current project "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true/false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nRegistering runner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". succeeded                     "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("runner")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("rUTY3xFP\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择 Runner 执行器，这里选择的是 shell")]),t._v("\nPlease enter the executor: docker+machine, kubernetes, docker, parallels, shell, virtualbox, docker-ssh, ssh, docker-ssh+machine:\nshell\nRunner registered successfully. Feel "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" to start it, but "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" it's running already the config should be automatically reloaded"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" \n")])])]),a("p",[t._v("绑定成功后，可以在项目的CI/CD设置中看到绑定的Runner：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://qiniu.wenwl.site/notes/gitlab-runner.png",alt:"gitlab-runner.png"}})]),t._v(" "),a("p",[t._v("其他指令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除注册信息")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it gitlab-runner gitlab-ci-multi-runner unregister --name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"名称"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看注册列表")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it gitlab-runner gitlab-ci-multi-runner list\n")])])]),a("h2",{attrs:{id:"gitlab-ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-yml"}},[t._v("#")]),t._v(" .gitlab-ci.yml")]),t._v(" "),a("p",[t._v("在目标项目工程下编写 "),a("code",[t._v(".gitlab-ci.yml")]),t._v(" 配置文件。该文件是提供给 GitLab Runner 执行 GitLab CI 的配置文件，让我们定义 Pipeline、Stages、Jobs。")]),t._v(" "),a("p",[t._v("下面是一个参考示例，将阶段划分为：构建、测试、部署，可以根据实际情况调整，注意每个阶段 gitlab-runner 都会清理一些上一个阶段生成的“无用的文件”：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy_test\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy_prod\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指在提交到 develop、master 时执行")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mvn clean package\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行测试用例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mvn test\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署测试服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy_test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy_test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bash scripts/deploy/deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("test.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署生产服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy_production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy_production\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bash scripts/deploy/deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("prod.sh\n")])])]),a("p",[t._v("其他示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" push\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" clean\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/maven/apache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("maven"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("3.6.3/bin/mvn clean package\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cp target/itoken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1.0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("SNAPSHOT.jar docker\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cd docker\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t 192.168.0.111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9090/itoken/itoken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config .\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" push\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker login 192.168.0.111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9090 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("u admin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p Harbor12345\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker push 192.168.0.111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9090/itoken/itoken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cd docker\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose down\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compose up "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("d\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" clean\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" if "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" $(docker images "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("q "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f dangling=true) "),a("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" '' "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("; then docker rmi $(docker images "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("q "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f dangling=true); fi;\n")])])]),a("h2",{attrs:{id:"集成效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成效果"}},[t._v("#")]),t._v(" 集成效果")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://qiniu.wenwl.site/notes/gitlab-runner-2.png",alt:"gitlab-runner-2.png"}})]),t._v(" "),a("h2",{attrs:{id:"项目dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目dockerfile"}},[t._v("#")]),t._v(" 项目Dockerfile")]),t._v(" "),a("p",[t._v("假如使用Docker来构建镜像、容器方式运行，下面提供一个项目用的Dockerfile参考：")]),t._v(" "),a("p",[t._v("PS：dockerize 这个插件通过 github 下载可能会比较慢，建议通过别的方式去处理，这里不做展开描述。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("FROM openjdk:8u302-jre\n\nENV APP_VERSION "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".0-SNAPSHOT\nENV DOCKERIZE_VERSION v0.6.1\n\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/jwilder/dockerize/releases/download/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DOCKERIZE_VERSION")]),t._v("/dockerize-linux-amd64-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DOCKERIZE_VERSION")]),t._v(".tar.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -C /usr/local/bin -xzvf dockerize-linux-amd64-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DOCKERIZE_VERSION")]),t._v(".tar.gz  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" dockerize-linux-amd64-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$DOCKERIZE_VERSION")]),t._v(".tar.gz\n\nWORKDIR /app\n\nCOPY itoken-eureka-"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$APP_VERSION")]),t._v(".jar /app/app.jar\n\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dockerize"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-timeout"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5m"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-wait"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp://192.168.0.112:8888"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Djava.security.egd=file:/dev/./urandom"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-jar"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app/app.jar"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--spring.profiles.active=dev"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8761")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);