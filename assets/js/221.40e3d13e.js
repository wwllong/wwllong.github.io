(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{869:function(t,e,a){"use strict";a.r(e);var l=a(58),i=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"junit注解和断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#junit注解和断言"}},[t._v("#")]),t._v(" JUnit注解和断言")]),t._v(" "),a("h2",{attrs:{id:"junit注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#junit注解"}},[t._v("#")]),t._v(" Junit注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Test public void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示该公共方法可以作为一个测试用例。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Before public void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示该方法必须在类中的每个测试之前执行，以便执行测试某些必要的先决条件。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@BeforeClass public static void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("附着在静态方法上，表示在类的所有测试前必须执行一次。通常使用在测试需要计算共享配置方法（如连接数据库）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@After public void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示该方法在每项测试后执行。（如执行每个测试后重置某些遍历、删除临时变量等")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@AfterC1ass public static void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("附着在静态方法上，表示在测试类所有的测试执行后执行，通常用来清理建立方法（如断开数据库）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("@Ignore public static void method()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("表示不执行该方法。通常用来暂时禁用特定的测试执行")])])])]),t._v(" "),a("h2",{attrs:{id:"断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[t._v("#")]),t._v(" 断言")]),t._v(" "),a("p",[t._v("断言是编程属术语，表示为一些布尔表达式，程序员相信在程序中的某个特定点该表达式值为真，可以在任何时候启用和禁用。断言验证，因此可以在测试时启用断言而在部署时禁用断言。同样，程序投入运行后，最终用户再遇到问题时，可以重新启动断言。")]),t._v(" "),a("p",[t._v("JUnit提供了断言测试方法。"),a("strong",[t._v("断言是我认为XX一定是xx样的")]),t._v("。这种测试的预测，可以带来稳定的预期结果（True/False），以及创建更稳定、品质更好且不易出错的代码。当需要在一个值为"),a("code",[t._v("false")]),t._v("时中断当前操作的话，可以使用断言，单元测试必须使用断言。")]),t._v(" "),a("h2",{attrs:{id:"常用断言方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用断言方法"}},[t._v("#")]),t._v(" 常用断言方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("断言")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertEquals([String message], expected value, actual value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言两个值相等。值可能是类型有int、short、long、byte、char、Object")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertTrue([String message], boolean condition)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言一个条件为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertFalse([String message], boolean condition")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言一个条件为假")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertNull([String message], java.lang.Object object)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言一个对象为null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertNotNull([String message], java.lang.Object object)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言一个对象不为null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertSame([String message], java.lang.Object expected, java.lang.Object actual)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言两个对象引用相同")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertNotSame([String message], java.lang.Object expected, java.lang.Object actual)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言两个对象引用不同")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("void assertArrayEquals([String message], expectedArray, resultArray)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("断言预期数组和结果数组相等。数组类型可能是int、short、long、byte、char、Object")])])])])])}),[],!1,null,null,null);e.default=i.exports}}]);