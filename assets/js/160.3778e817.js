(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{808:function(t,a,s){"use strict";s.r(a);var n=s(58),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"直接内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存"}},[t._v("#")]),t._v(" 直接内存")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("直接内存（Direct Memory），不是虚拟机运行时数据区的一部分，也不是《Java虚拟机规范》中定义的内存区域。直接内存是在Java堆外的、直接向系统申请的内存区间。直接内存来源于NIO，通过存在堆中的"),s("code",[t._v("DirectByteBuffer")]),t._v("操作"),s("code",[t._v("Native")]),t._v("内存。通常，访问直接内存的速度会优于Java堆，即读写性能高。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("因此出于性能考虑，读写频繁的场合可能会考虑使用直接内存。")])]),t._v(" "),s("li",[s("p",[t._v("Java的NIO库允许Java程序使用直接内存，用于数据缓冲区。")])])]),t._v(" "),s("h2",{attrs:{id:"非直接缓存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非直接缓存区"}},[t._v("#")]),t._v(" 非直接缓存区")]),t._v(" "),s("p",[t._v("使用IO读写文件，需要与磁盘交互，需要由用户态切换到内核态。")]),t._v(" "),s("p",[t._v("在内核态时，需要两份内存存储重复数据，效率低。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qiniu.wenwl.site/notes/jvm/direct_memory_1.png",alt:"direct_memory_1"}})]),t._v(" "),s("h2",{attrs:{id:"直接缓存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接缓存区"}},[t._v("#")]),t._v(" 直接缓存区")]),t._v(" "),s("p",[t._v("使用NIO时，操作系统划出的直接缓存区可以被Java代码直接访问，只有一份。")]),t._v(" "),s("p",[t._v("NIO适合对大文件的读写操作。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qiniu.wenwl.site/notes/jvm/direct_memory_2.png",alt:"direct_memory_2"}})]),t._v(" "),s("h2",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("使用直接内存也可能导致OutOfMemoryError异常。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" in thread "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("OutOfMemoryError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Direct")]),t._v(" buffer memory \n    at "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Bits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reserveMemory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("693")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("DirectByteBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectByteBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ByteBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocateDirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("311")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    at "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atguigu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("BufferTest2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferTest2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("由于直接内存在Java堆外，因此它的大小不会直接受限于"),s("code",[t._v("-Xmx")]),t._v("指定的最大堆大小，但是系统内存是有限的，Java堆和直接内存的总和依然受限于操作系统能给出的最大内存。")])]),t._v(" "),s("li",[s("p",[t._v("缺点")]),t._v(" "),s("ul",[s("li",[t._v("分配回收成本较高")]),t._v(" "),s("li",[t._v("不受JVM内存回收管理")])])]),t._v(" "),s("li",[s("p",[t._v("直接内存大小可以通过"),s("code",[t._v("MaxDirectMemorySize")]),t._v("设置，如果不指定，默认与堆的最大值"),s("code",[t._v("-Xmx")]),t._v("参数值一致。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qiniu.wenwl.site/notes/jvm/direct_memory_3.png",alt:"direct_memory_3"}})])])])])}),[],!1,null,null,null);a.default=e.exports}}]);