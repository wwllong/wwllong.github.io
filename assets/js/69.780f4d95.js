(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{564:function(e,a,t){e.exports=t.p+"assets/img/local-repository.4f215dc8.png"},895:function(e,a,t){"use strict";t.r(a);var n=t(58),r=Object(n.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"maven仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven仓库"}},[e._v("#")]),e._v(" Maven仓库")]),e._v(" "),n("h2",{attrs:{id:"maven本地仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven本地仓库"}},[e._v("#")]),e._v(" Maven本地仓库")]),e._v(" "),n("p",[e._v("Maven的本地资源库用来存储所有项目的依赖关系到本地文件夹。一个Maven项目，所有相关文都被存储在Maven本地仓库。")]),e._v(" "),n("p",[e._v("默认情况下，Maven的本地资源默认为./m2目录文件夹：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("Unix/Mac OS ：~/.m2\nWindows:c:\\Documents and Settings\\{username}\\.m2\n")])])]),n("p",[e._v("通常情况下，可改变默认的.m2目录下的默认本地仓库文件夹到其他更有意义的名称，例如repo。")]),e._v(" "),n("p",[e._v("进入{your-maven_path}/conf/settings.xml找到localRepository，配置本地仓库路径即可。")]),e._v(" "),n("p",[n("img",{attrs:{src:t(564),alt:"本地仓库"}})]),e._v(" "),n("h2",{attrs:{id:"maven中央仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven中央仓库"}},[e._v("#")]),e._v(" Maven中央仓库")]),e._v(" "),n("p",[e._v("当建立一个Maven的项目，Maven会检查pom.xml文件，以确定下载哪些依赖。首先，Maven会先从本地资源仓库获得Maven的本地资源库依赖资源，如果没有找到，然后默认从"),n("a",{attrs:{href:"http://repo1.maven.org/maven2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Maven中央仓库"),n("OutboundLink")],1),e._v("查找下载")]),e._v(" "),n("p",[e._v("使用"),n("a",{attrs:{href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("mvnrepository"),n("OutboundLink")],1),e._v(",搜索依赖的配置。")])])}),[],!1,null,null,null);a.default=r.exports}}]);