(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{974:function(t,a,s){"use strict";s.r(a);var n=s(58),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-boot-整合-hikaricp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-整合-hikaricp"}},[t._v("#")]),t._v(" Spring Boot 整合 HikariCP")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbrettwooldridge%2FHikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("HiKariCP"),s("OutboundLink")],1),t._v(" 是数据库连接池的一个后起之秀，号称性能最好，可以完美地 PK 掉其他连接池。Hikari（ひかり[shi ga li]） 来自日文，是 "),s("strong",[t._v("光")]),t._v(" 的意思，这个产品的口号是 "),s("strong",[t._v("快速、简单、可靠")]),t._v("。总得来说，它是一个高性能的 JDBC 连接池，基于 BoneCP 做了不少的改进和优化，就连 BoneCP 作者放弃维护，在Github 项目主页推荐大家使用 HikariCP。（BoneCP 在快速这个特点上做到了极致，例如是C3P0的25倍左右）")]),t._v(" "),s("p",[t._v("HiKariCP 从 Spring Boot 2.x 后纳入为默认的数据连接池。")]),t._v(" "),s("h2",{attrs:{id:"hikaricp-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hikaricp-特性"}},[t._v("#")]),t._v(" HiKariCP 特性")]),t._v(" "),s("h3",{attrs:{id:"优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("字节码精简 ：")]),t._v(" 优化代码，直到编译后的字节码最少，这样，CPU 缓存可以加载更多的程序代码")]),t._v(" "),s("li",[s("strong",[t._v("优化代理和拦截器 ：")]),t._v(" 减少代码，例如 HikariCP 的 Statement proxy 只有 100 行代码，只有 BoneCP 的十分之一")]),t._v(" "),s("li",[s("strong",[t._v("自定义数组类型（FastStatementList）代替 ArrayList ：")]),t._v(" 避免每次 "),s("code",[t._v("get()")]),t._v(" 调用都要进行 range check，避免调用 "),s("code",[t._v("remove()")]),t._v(" 时的从头到尾的扫描")]),t._v(" "),s("li",[s("strong",[t._v("自定义集合类型（ConcurrentBag）：")]),t._v(" 提高并发读写的效率")]),t._v(" "),s("li",[s("strong",[t._v("其他针对 BoneCP 缺陷的优化：")]),t._v(" 比如对于耗时超过一个 CPU 时间片的方法调用的研究（但没说具体怎么优化）")])]),t._v(" "),s("h3",{attrs:{id:"代码量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码量"}},[t._v("#")]),t._v(" 代码量")]),t._v(" "),s("p",[t._v("几个连接池的代码量对比（代码量越少，一般意味着执行效率越高、发生 BUG 的可能性越低）:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Pool")]),t._v(" "),s("th",[t._v("Files")]),t._v(" "),s("th",[t._v("Code")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Vibur")]),t._v(" "),s("td",[t._v("34")]),t._v(" "),s("td",[t._v("1927")])]),t._v(" "),s("tr",[s("td",[t._v("HikariCP")]),t._v(" "),s("td",[t._v("21")]),t._v(" "),s("td",[t._v("2228")])]),t._v(" "),s("tr",[s("td",[t._v("Tomcat")]),t._v(" "),s("td",[t._v("31")]),t._v(" "),s("td",[t._v("6345")])]),t._v(" "),s("tr",[s("td",[t._v("BoneCP")]),t._v(" "),s("td",[t._v("49")]),t._v(" "),s("td",[t._v("7293")])]),t._v(" "),s("tr",[s("td",[t._v("C3P0")]),t._v(" "),s("td",[t._v("120")]),t._v(" "),s("td",[t._v("15550")])])])]),t._v(" "),s("h3",{attrs:{id:"可靠性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可靠性"}},[t._v("#")]),t._v(" 可靠性")]),t._v(" "),s("p",[t._v("另外，关于可靠性方面，也是有实验和数据支持的。对于数据库连接中断的情况，通过测试 "),s("code",[t._v("getConnection()")]),t._v("，各种 CP 的不相同处理方法如下（所有 CP 都配置了跟 "),s("code",[t._v("connectionTimeout")]),t._v(" 类似的参数为 5 秒钟）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("HikariCP(A)：")]),t._v(" 等待 5 秒钟后，如果连接还是没有恢复，则抛出一个 "),s("code",[t._v("SQLExceptions")]),t._v(" 异常；后续的 "),s("code",[t._v("getConnection()")]),t._v(" 也是一样处理")]),t._v(" "),s("li",[s("strong",[t._v("C3P0(C-)：")]),t._v(" 完全没有反应，没有提示，也不会在 "),s("code",[t._v("CheckoutTimeout")]),t._v(" 配置的时长超时后有任何通知给调用者；然后等待 2 分钟后终于醒来了，返回一个 error")]),t._v(" "),s("li",[s("strong",[t._v("Tomcat(F)：")]),t._v(" 返回一个 connection，然后调用者如果利用这个无效的 connection 执行 SQL 语句 结果可想而知；大约 55 秒之后终于醒来了，这时候的 "),s("code",[t._v("getConnection()")]),t._v(" 终于可以返回一个 error，但没有等待参数配置的 5 秒钟，而是立即返回 error")]),t._v(" "),s("li",[s("strong",[t._v("BoneCP(C)：")]),t._v(" 跟 Tomcat 的处理方法一样；也是大约 55 秒之后才醒来，有了正常的反应，并且终于会等待 5 秒钟之后返回 error 了")])]),t._v(" "),s("h2",{attrs:{id:"spring-boot-整合-hikaricp-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-整合-hikaricp-2"}},[t._v("#")]),t._v(" Spring Boot 整合 HikariCP")]),t._v(" "),s("h3",{attrs:{id:"引入依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖"}},[t._v("#")]),t._v(" 引入依赖")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- HikariCP --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.zaxxer"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HikariCP"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${hikaricp.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-jdbc"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 排除 tomcat-jdbc 以使用 HikariCP --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.tomcat"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("tomcat-jdbc"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- MySQL 驱动 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mysql-connector-java"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"配置-application-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-application-yml"}},[t._v("#")]),t._v(" 配置 "),s("code",[t._v("application.yml")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.zaxxer.hikari.HikariDataSource\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.cj.jdbc.Driver\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//ip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("port/dbname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("useUnicode=true"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&characterEncoding=utf-8&useSSL=false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hikari")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是客户端等待连接池连接的最大毫秒数")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("connection-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是允许连接在连接池中空闲的最长时间")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minimum-idle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置最大池大小")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maximum-pool-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是允许连接在连接池中空闲的最长时间（以毫秒为单位）")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("idle-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60000")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 池中连接关闭后的最长生命周期（以毫秒为单位）")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max-lifetime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600000")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置从池返回的连接的默认自动提交行为。默认值为true。")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auto-commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接池的名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pool-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyHikariCP\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启连接监测泄露")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("leak-detection-threshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试连接数据库")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("connection-test-query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SELECT 1\n")])])]),s("h2",{attrs:{id:"hikaricp-默认配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hikaricp-默认配置"}},[t._v("#")]),t._v(" HikariCP 默认配置")]),t._v(" "),s("p",[t._v("HikariCP 有两部分的参数有两部分组成")]),t._v(" "),s("ul",[s("li",[t._v("主要参数是在 "),s("code",[t._v("com.zaxxer.hikari.HikariConfig")]),t._v(" 中，")]),t._v(" "),s("li",[t._v("部分参数是在 "),s("code",[t._v("com.zaxxer.hikari.pool.PoolBase")]),t._v(" 中。")])]),t._v(" "),s("h3",{attrs:{id:"常用参数配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用参数配置"}},[t._v("#")]),t._v(" 常用参数配置")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("属性")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("autoCommit")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("自动提交从池中返回的连接")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("connectionTimeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("30000")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("等待来自池的连接的最大毫秒数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("maxLifetime")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1800000")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("池中连接最长生命周期如果不等于0且小于30秒则会被重置回30分钟")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("minimumIdle")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("池中维护的最小空闲连接数 minIdle<0或者minIdle>maxPoolSize,则被重置为maxPoolSize")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("maximumPoolSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("池中最大连接数，包括闲置和使用中的连接")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("metricRegistry")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("healthCheckRegistry")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("报告当前健康信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("poolName")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HikariPool-1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("idleTimeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是允许连接在连接池中空闲的最长时间")])])])]),t._v(" "),s("p",[t._v("建议：")]),t._v(" "),s("ol",[s("li",[t._v("minimumIdle，建议使用默认值，小于maximumPoolSize值。")]),t._v(" "),s("li",[t._v("连接空闲时间idleTimeout生效，重发频率为60多秒，值可设为1分钟，减少空闲连接占用，尽快释放数据库连接。")]),t._v(" "),s("li",[t._v("连接生命周期maxLifetime值设为10分钟，低于数据库超时时长，尽快释放数据库无效连接。")]),t._v(" "),s("li",[t._v("增加连接池的用户定义名称。")]),t._v(" "),s("li",[t._v("开启连接监测泄露leakDetectionThreshold方法，此属性控制在记录消息之前连接可能离开池的时间量，表明可能存在的连接泄漏。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);