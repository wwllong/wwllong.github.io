(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{807:function(v,a,i){"use strict";i.r(a);var _=i(58),l=Object(_.a)({},(function(){var v=this,a=v.$createElement,i=v._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"jvm家族"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#jvm家族"}},[v._v("#")]),v._v(" JVM家族")]),v._v(" "),i("h2",{attrs:{id:"虚拟机始祖-sun-classic-vm-exact-vm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机始祖-sun-classic-vm-exact-vm"}},[v._v("#")]),v._v(" 虚拟机始祖：Sun Classic VM / Exact VM")]),v._v(" "),i("p",[v._v("Sun Classic VM：")]),v._v(" "),i("ul",[i("li",[v._v("早在1996年Java1.0版本的时候，Sun公司发布了一款名为sun classic VM的Java虚拟机，它同时也是世界上第一款商用Java虚拟机，JDK1.4时完全被淘汰。")]),v._v(" "),i("li",[v._v("这款虚拟机内部只提供解释器。现在还有及时编译器，因此效率比较低，而及时编译器会把热点代码缓存起来，那么以后使用热点代码的时候，效率就比较高。")]),v._v(" "),i("li",[v._v("如果使用JIT编译器，就需要进行外挂。但是一旦使用了JIT编译器，JIT就会接管虚拟机的执行系统。解释器就不再工作。解释器和编译器不能配合工作。")]),v._v(" "),i("li",[v._v("现在hotspot内置了此虚拟机。")])]),v._v(" "),i("p",[v._v("Exact VM：")]),v._v(" "),i("ul",[i("li",[v._v("为了解决上一个虚拟机问题，jdk1.2时，Sun提供了此虚拟机。")]),v._v(" "),i("li",[v._v("Exact Memory Management：准确式内存管理")]),v._v(" "),i("li",[v._v("也可以叫Non-Conservative/Accurate Memory Management")]),v._v(" "),i("li",[v._v("虚拟机可以知道内存中某个位置的数据具体是什么类型。")]),v._v(" "),i("li",[v._v("具备现代高性能虚拟机的维形\n"),i("ul",[i("li",[v._v("热点探测")]),v._v(" "),i("li",[v._v("编译器与解释器混合工作模式")])])]),v._v(" "),i("li",[v._v("只在solaris平台短暂使用，其他平台上还是classic vm\n"),i("ul",[i("li",[v._v("英雄气短，终被Hotspot虚拟机替换")])])])]),v._v(" "),i("h2",{attrs:{id:"武林盟主-hotspot-vm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#武林盟主-hotspot-vm"}},[v._v("#")]),v._v(" 武林盟主：HotSpot VM")]),v._v(" "),i("ul",[i("li",[v._v("最初由一家名为“Longview Technologies”的小公司设计\n"),i("ul",[i("li",[v._v("1997年，此公司被sun收购；2009年，Sun公司被甲骨文收购。")]),v._v(" "),i("li",[v._v("JDK1.3时，HotSpot VM成为默认虚拟机")])])]),v._v(" "),i("li",[v._v("目前Hotspot占有绝对的市场地位，称霸武林。\n"),i("ul",[i("li",[v._v("不管是现在仍在广泛使用的JDK6，还是使用比例较多的JDK8中，默认的虚拟机都是HotSpot")]),v._v(" "),i("li",[v._v("Sun / Oracle JDK 和 OpenJDK 的默认虚拟机")]),v._v(" "),i("li",[v._v("因此本课程中默认介绍的虚拟机都是HotSpot，相关机制也主要是指HotSpot的Gc机制。（比如其他两个商用虚机都没有方法区的概念）")])])]),v._v(" "),i("li",[v._v("从服务器、桌面到移动端、嵌入式都有应用。")]),v._v(" "),i("li",[v._v("名称中的HotSpot指的就是它的热点代码探测技术。\n"),i("ul",[i("li",[v._v("通过计数器找到最具编译价值代码，触发即时编译或栈上替换")]),v._v(" "),i("li",[v._v("通过编译器与解释器协同工作，在最优化的程序响应时间与最佳执行性能中取得平衡")])])])]),v._v(" "),i("h2",{attrs:{id:"天下第二-bea-jrockit-ibm-j9"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#天下第二-bea-jrockit-ibm-j9"}},[v._v("#")]),v._v(" 天下第二：BEA JRockit/IBM  J9")]),v._v(" "),i("p",[v._v("BEA JRockit：")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("专注于服务器端应用")]),v._v(" "),i("ul",[i("li",[v._v("它可以不太关注程序启动速度，因此JRockit内部不包含解析器实现，全部代码都靠即时编译器编译后执行。")])])]),v._v(" "),i("li",[i("p",[v._v("大量的行业基准测试显示，JRockit JVM是世界上最快的JVM。")]),v._v(" "),i("ul",[i("li",[v._v("使用JRockit产品，客户已经体验到了显著的性能提高（一些超过了70%）和硬件成本的减少（达50%）。")])])]),v._v(" "),i("li",[i("p",[v._v("优势：全面的Java运行时解决方案组合")]),v._v(" "),i("ul",[i("li",[v._v("JRockit面向延迟敏感型应用的解决方案JRockit Real Time提供以毫秒或微秒级的JVM响应时间，适合财务、军事指挥、电信网络的需要")]),v._v(" "),i("li",[v._v("Mission Control服务套件，它是一组以极低的开销来监控、管理和分析生产环境中的应用程序的工具。")])])]),v._v(" "),i("li",[i("p",[v._v("2008年，JRockit被oracle收购。")])]),v._v(" "),i("li",[i("p",[v._v("Oracle表达了整合两大优秀虚拟机的工作，大致在JDK8中完成。整合的方式是在HotSpot的基础上，移植JRockit的优秀特性。")])]),v._v(" "),i("li",[i("p",[v._v("高斯林：目前就职于谷歌，研究人工智能和水下机器人")])])]),v._v(" "),i("p",[v._v("IBM  J9：")]),v._v(" "),i("ul",[i("li",[v._v("全称：IBM Technology for Java Virtual Machine，简称IT4J，内部代号：J9")]),v._v(" "),i("li",[v._v("市场定位与HotSpot接近，服务器端、桌面应用、嵌入式等多用途VM")]),v._v(" "),i("li",[v._v("广泛用于IBM的各种Java产品。")]),v._v(" "),i("li",[v._v("目前，有影响力的三大商用虚拟机之一，也号称是世界上最快的Java虚拟机。")]),v._v(" "),i("li",[v._v("2017年左右，IBM发布了开源J9VM，命名为openJ9，交给EClipse基金会管理，也称为Eclipse OpenJ9")])]),v._v(" "),i("h2",{attrs:{id:"小家碧玉-kvm和cdc-cldc-hotspot"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#小家碧玉-kvm和cdc-cldc-hotspot"}},[v._v("#")]),v._v(" 小家碧玉：KVM和CDC / CLDC Hotspot")]),v._v(" "),i("ul",[i("li",[i("p",[v._v("Oracle在Java ME产品线上的两款虚拟机为：CDC/CLDC HotSpot Implementation VM")])]),v._v(" "),i("li",[i("p",[v._v("KVM（Kilobyte）是CLDC-HI早期产品")])]),v._v(" "),i("li",[i("p",[v._v("目前移动领域地位尴尬，智能机被Android和iOS二分天下。")])]),v._v(" "),i("li",[i("p",[v._v("KVM简单、轻量、高度可移植，面向更低端的设备上还维持自己的一片市场")]),v._v(" "),i("ul",[i("li",[v._v("智能控制器、传感器")]),v._v(" "),i("li",[v._v("老人手机、经济欠发达地区的功能手机")])])]),v._v(" "),i("li",[i("p",[v._v("所有的虚拟机的原则：一次编译，到处运行")])])]),v._v(" "),i("h2",{attrs:{id:"软硬合璧-azul-vm-liquid-vm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#软硬合璧-azul-vm-liquid-vm"}},[v._v("#")]),v._v(" 软硬合璧：Azul VM / Liquid VM")]),v._v(" "),i("p",[v._v("Azul VM：")]),v._v(" "),i("ul",[i("li",[v._v("前面三大“高性能Java虚拟机”使用在通用硬件平台上这里Azul VW和BEA Liquid VM是与特定硬件平台绑定、软硬件配合的专有虚拟机\n"),i("ul",[i("li",[v._v("高性能Java虚拟机中的战斗机。")])])]),v._v(" "),i("li",[v._v("Azul VM是Azul Systems公司在HotSpot基础上进行大量改进，运行于Azul Systems公司的专有硬件Vega系统上的Java虚拟机。")]),v._v(" "),i("li",[v._v("每个Azul VM实例都可以管理至少数十个CPU和数百GB内存的硬件资源，并提供在巨大内存范围内实现可控的GC时间的垃圾收集器、专有硬件优化的线程调度等优秀特性。")]),v._v(" "),i("li",[v._v("2010年，AzulSystems公司开始从硬件转向软件，发布了自己的Zing JVM，可以在通用x86平台上提供接近于Vega系统的特性。")])]),v._v(" "),i("p",[v._v("Liquid VM：")]),v._v(" "),i("ul",[i("li",[v._v("高性能Java虚拟机中的战斗机。")]),v._v(" "),i("li",[v._v("BEA公司开发的，直接运行在自家Hypervisor系统上")]),v._v(" "),i("li",[v._v("Liquid VM即是现在的JRockit VE（Virtual Edition），Liquid VM不需要操作系统的支持，或者说它自己本身实现了一个专用操作系统的必要功能，如线程调度、文件系统、网络支持等。")]),v._v(" "),i("li",[v._v("随着JRockit虚拟机终止开发，Liquid vM项目也停止了。")])]),v._v(" "),i("h2",{attrs:{id:"挑战者-apache-harmony-google-android-dalvik-vm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#挑战者-apache-harmony-google-android-dalvik-vm"}},[v._v("#")]),v._v(" 挑战者：Apache Harmony / Google Android Dalvik VM")]),v._v(" "),i("p",[v._v("Apache Harmony：")]),v._v(" "),i("ul",[i("li",[v._v("Apache也曾经推出过与JDK1.5和JDK1.6兼容的Java运行平台Apache Harmony。")]),v._v(" "),i("li",[v._v("它是IBM和Intel联合开发的开源JVM，受到同样开源的OpenJDK的压制，Sun坚决不让Harmony获得JCP认证，最终于2011年退役，IBM转而参与OpenJDK")]),v._v(" "),i("li",[v._v("虽然目前并没有Apache Harmony被大规模商用的案例，但是它的Java类库代码吸纳进了Android SDK。")])]),v._v(" "),i("p",[v._v("Google Android Dalvik VM：")]),v._v(" "),i("ul",[i("li",[v._v("谷歌开发的，应用于Android系统，并在Android2.2中提供了JIT，发展迅猛。")]),v._v(" "),i("li",[v._v("Dalvik VM只能称作虚拟机，而不能称作“Java虚拟机”，它没有遵循 Java虚拟机规范，不能直接执行Java的Class文件")]),v._v(" "),i("li",[v._v("基于寄存器架构，不是jvm的栈架构。")]),v._v(" "),i("li",[v._v("执行的是编译以后的dex（Dalvik Executable）文件。执行效率比较高。\n"),i("ul",[i("li",[v._v("它执行的dex（Dalvik Executable）文件可以通过class文件转化而来，使用Java语法编写应用程序，可以直接使用大部分的Java API等。")])])]),v._v(" "),i("li",[v._v("Android 5.0使用支持提前编译（Ahead of Time Compilation，AoT）的ART VM替换Dalvik VM。")])]),v._v(" "),i("h2",{attrs:{id:"没有成功-但不算失败-micorsoft-jvm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#没有成功-但不算失败-micorsoft-jvm"}},[v._v("#")]),v._v(" 没有成功，但不算失败：Micorsoft JVM")]),v._v(" "),i("ul",[i("li",[v._v("微软为了在IE3浏览器中支持Java Applets，开发了Microsoft JVM。")]),v._v(" "),i("li",[v._v("只能在Windows平台下运行。但确是当时Windows下性能最好的Java VM。")]),v._v(" "),i("li",[v._v("1997年，Sun以侵犯商标、不正当竞争罪名指控微软成功，赔了Sun很多钱。微软WindowsXP SP3中抹掉了其VM。现在Windows上安装的jdk都是HotSpot。")])]),v._v(" "),i("h2",{attrs:{id:"taobao-jvm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#taobao-jvm"}},[v._v("#")]),v._v(" Taobao JVM")]),v._v(" "),i("ul",[i("li",[v._v("由AliJVM团队发布。阿里，国内使用Java最强大的公司，覆盖云计算、金融、物流、电商等众多领域，需要解决高并发、高可用、分布式的复合问题，有大量的开源产品。")]),v._v(" "),i("li",[v._v("基于OpenJDK 开发了自己的定制版本AlibabaJDK，简称AJDK。是整个阿里Java体系的基石。")]),v._v(" "),i("li",[v._v("基于OpenJDK Hotspot VM发布的国内第一个优化、深度定制且开源的高性能服务器版Java虚拟机。\n"),i("ul",[i("li",[v._v("创新的GCIH（GC invisible heap）技术实现了off-heap，即将生命周期较长的Java对象从heap中移到heap之外，并且GC不能管理GCIH内部的Java对象，以此达到降低GC的回收频率和提升GC的回收效率的目的。")]),v._v(" "),i("li",[v._v("GCIH中的对象还能够在多个Java虚拟机进程中实现共享")]),v._v(" "),i("li",[v._v("使用crc32指令实现JVM intrinsic 降低JNI 的调用开销")]),v._v(" "),i("li",[v._v("PMU hardware 的Java profiling tool 和诊断协助功能")]),v._v(" "),i("li",[v._v("针对大数据场景的ZenGc")])])]),v._v(" "),i("li",[v._v("Taobao vm应用在阿里产品上性能高，硬件严重依赖intel的cpu，损失了兼容性，但提高了性能\n"),i("ul",[i("li",[v._v("目前已经在淘宝、天猫上线，把oracle官方JvM版本全部替换了。")])])])]),v._v(" "),i("h2",{attrs:{id:"继承者-graal-vm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#继承者-graal-vm"}},[v._v("#")]),v._v(" 继承者：Graal VM")]),v._v(" "),i("ul",[i("li",[v._v('2018年4月，oracle Labs公开了Graal VM，号称 "Run Programs Faster Anywhere"，野心勃勃。与1995年java的”write once，run anywhere"遥相呼应。')]),v._v(" "),i("li",[v._v("Graal VM在HotSpot VM基础上增强而成的跨语言全栈虚拟机，可以作为“任何语言” 的运行平台使用。语言包括：Java、Scala、Groovy、Kotlin；C、C++、Javascript、Ruby、Python、R等")]),v._v(" "),i("li",[v._v("支持不同语言中混用对方的接口和对象，支持这些语言使用已经编写好的本地库文件")]),v._v(" "),i("li",[v._v("工作原理是将这些语言的源代码或源代码编译后的中间格式，通过解释器转换为能被Graal VM接受的中间表示。Graal VM提供Truffle工具集快速构建面向一种新语言的解释器。在运行时还能进行即时编译优化，获得比原生编译器更优秀的执行效率。")]),v._v(" "),i("li",[v._v("如果说HotSpot有一天真的被取代，Graal VM希望最大。但是Java的软件生态没有丝毫变化。")])]),v._v(" "),i("h2",{attrs:{id:"百家争鸣"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#百家争鸣"}},[v._v("#")]),v._v(" 百家争鸣")]),v._v(" "),i("p",[v._v("JVM可以说是百家争鸣，具体JVM的内存结构，其实取决于其实现，不同厂商的JVM，或者同一厂商发布的不同版本，都有可能存在一定差异。主要以Oracle HotSpot VM为默认虚拟机。")])])}),[],!1,null,null,null);a.default=l.exports}}]);