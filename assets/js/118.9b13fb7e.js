(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{753:function(t,a,e){"use strict";e.r(a);var s=e(58),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker-machine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine"}},[t._v("#")]),t._v(" Docker Machine")]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("Docker Machine 是一种可以让您在虚拟主机上安装 Docker 的工具，并可以使用 docker-machine 命令来管理主机。Docker Machine 也可以集中管理所有的 docker 主机，比如快速的给 100 台服务器安装上 docker。")]),t._v(" "),e("p",[t._v("Docker Machine 管理的虚拟主机可以是机上的，也可以是云供应商，如阿里云，腾讯云，AWS，或 DigitalOcean。使用 docker-machine 命令，您可以启动，检查，停止和重新启动托管主机，也可以升级 Docker 客户端和守护程序，以及配置 Docker 客户端与您的主机进行通信。")]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("p",[t._v("注意安装 Docker Machine 之前你需要先安装 Docker。")]),t._v(" "),e("p",[t._v("Docker Machine 可以在多种平台上安装使用，包括 Linux 、MacOS 以及 windows。")]),t._v(" "),e("h3",{attrs:{id:"linux安装命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux安装命令"}},[t._v("#")]),t._v(" Linux安装命令")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("base")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://github.com/docker/machine/releases/download/v0.16.0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$base")]),t._v("/docker-machine-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -s"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -m"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tmp/docker-machine "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" /tmp/docker-machine /usr/local/bin/docker-machine "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-machine\n")])])]),e("h3",{attrs:{id:"mac安装命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac安装命令"}},[t._v("#")]),t._v(" Mac安装命令")]),t._v(" "),e("p",[t._v("这里的示例，是使用Docker Machine创建基于（boot2docker）VirtualBox的虚拟机。")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 安装docker、docker-machine、docker-compose、virtualbox")]),t._v("\n$ brew "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" docker-machine "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" virtualbox\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建基于VirtualBox的虚拟机")]),t._v("\ndocker-machine create --engine-registry-mirror"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("docker加速镜像地址"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --driver virtualbox --virtualbox-no-vtx-check default\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 共享Docker需要的目录文件")]),t._v("\ndocker-machine stop\nvboxmanage sharedfolder "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" default --name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("挂载共享目录名称"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --hostpath "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地共享目录路径"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --automount\ndocker-machine start\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 固定虚拟机IP")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ifconfig eth1 192.168.99.101 netmask 255.255.255.0 broadcast 192.168.99.255 up"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" docker-machine "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" default "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /var/lib/boot2docker/bootsync.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null\ndocker-machine restart\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 配置docker/docker-compose环境变量")]),t._v("\ndocker-machine "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" default\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("eval")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("docker-machine "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" default"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 更改ip需要重新生成证书（只需要第一次）")]),t._v("\ndocker-machine regenerate-certs default\n")])])]),e("p",[t._v("注意docker-machine指令，如果没有指定 [your machine name]，默认启动的容器名称为 "),e("code",[t._v("default")]),t._v(", 大家可以根据实际情况自己命名。")]),t._v(" "),e("p",[t._v("这里的命令可能需要配置"),e("RouterLink",{attrs:{to:"/git/git-proxy.html"}},[t._v("Git 代理")]),t._v("，才能下载到相应的依赖包。")],1),t._v(" "),e("p",[t._v("ps：boot2docker是个镜像引用，不管修改什么文件重启后都是重新加载的，这里有两种方式进行自定义配置。")]),t._v(" "),e("ol",[e("li",[t._v("在"),e("code",[t._v("/var/lib/boot2docker/bootsync.sh")]),t._v("任意定制自己的需求设置。\n例如："),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" eth1 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".99.101 netmask "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255.255")]),t._v(".255.0 broadcast "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".99.255 up\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -f /mnt/sda1/localtime /etc/localtime "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Asia/Shanghai"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/timezone"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更改时区、时间（/mnt/sda1/localtime是从别的服务器cp过阿里的/usr/share/zoneinfo/Asia/Shanghai）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{'),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("registry-mirrors"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": ["),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("https://registry.docker-cn.com"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(']}"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/docker/daemon.json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Docker 中国官方镜像加速")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("修改"),e("code",[t._v("/var/lib/boot2docker/profile")]),t._v("，例如配置镜像源："),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 在–label provider=virtualbox的下一行添加镜像源配置 我虚拟机是通过virtualbox启动的")]),t._v("\n--registry-mirror"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.docker-cn.com\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"windows安装命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#windows安装命令"}},[t._v("#")]),t._v(" Windows安装命令")]),t._v(" "),e("p",[t._v("使用"),e("a",{attrs:{href:"https://git-for-windows.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git BASH"),e("OutboundLink")],1),t._v("，并输入一下命令：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("base")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://github.com/docker/machine/releases/download/v0.16.0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/bin"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$base")]),t._v("/docker-machine-Windows-x86_64.exe "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/bin/docker-machine.exe"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v('/bin/docker-machine.exe"')]),t._v("\n")])])]),e("h2",{attrs:{id:"默认用户和密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#默认用户和密码"}},[t._v("#")]),t._v(" 默认用户和密码")]),t._v(" "),e("p",[t._v("通常安装在虚拟机上的Docker是基于Docker boot2docker镜像的镜像，默认用户和密码")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("用户")]),t._v(" "),e("th",[t._v("密码")]),t._v(" "),e("th",[t._v("进入方式")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("docker")]),t._v(" "),e("td",[t._v("tcuser")]),t._v(" "),e("td",[t._v("ssh")])]),t._v(" "),e("tr",[e("td",[t._v("root")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("command：sudo -i (docker用户下执行)")])])])]),t._v(" "),e("h2",{attrs:{id:"常用指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用指令"}},[t._v("#")]),t._v(" 常用指令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("docker-machine ls")]),t._v(" "),e("td",[t._v("列出可用的机器。")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine create --driver virtualbox default")]),t._v(" "),e("td",[t._v("创建机器。--driver：指定用来创建机器的驱动类型，这里是 virtualbox。")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine ip defalut")]),t._v(" "),e("td",[t._v("查看机器的 ip。docker-machine相关指令，如果不指定机器名称默认指向机器为defalut，故该指令可以简化为docker-machine ip，后续不再重述这个默认规则。")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine start defalut")]),t._v(" "),e("td",[t._v("启动机器")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine ssh defalut")]),t._v(" "),e("td",[t._v("与机器交互")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine active")]),t._v(" "),e("td",[t._v("查看当前激活状态的 Docker 主机。")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine rm defalut")]),t._v(" "),e("td",[t._v("删除某台 Docker 主机，对应的虚拟机也会被删除。")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine env defalut")]),t._v(" "),e("td",[t._v("显示连接到某个主机需要的环境变量")])]),t._v(" "),e("tr",[e("td",[t._v("docker-machine mount")]),t._v(" "),e("td",[t._v("使用 SSHFS 从计算机装载或卸载目录")])])])]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.runoob.com/docker/docker-machine.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Machine"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/876940111749",target:"_blank",rel:"noopener noreferrer"}},[t._v("AMD黑苹果Docker环境搭建"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);