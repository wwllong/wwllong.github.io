(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{765:function(t,s,e){"use strict";e.r(s);var a=e(58),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"ubuntu安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装docker"}},[t._v("#")]),t._v(" Ubuntu安装Docker")]),t._v(" "),e("p",[t._v("警告：切勿在没有配置 Docker APT 源的情况下直接使用 apt 命令安装 Docker")]),t._v(" "),e("p",[t._v("本文介绍Ubuntu安装Docker的方法，其他环境可参考"),e("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方安装教程"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"版本要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本要求"}},[t._v("#")]),t._v(" 版本要求")]),t._v(" "),e("p",[t._v("Docker CE 可以安装在 64 位的 x86 平台或 ARM 平台上。Ubuntu 发行版中，LTS（Long-Term-Support）长期支持版本，会获得 5 年的升级维护支持，这样的版本会更稳定，因此在生产环境中推荐使用 LTS 版本，在编写本文前，最新的 LTS 版本为  Ubuntu 20.04 LTS，下文也基于这个版本演示。")]),t._v(" "),e("p",[t._v("如果你的Ubuntu版本是 14.04，注意安装可选内核模块包，而16.04 +上的版本Docker CE 默认使用 "),e("code",[t._v("overlay2")]),t._v(" 存储层驱动,无需手动配置。从 Ubuntu 14.04 开始，一部分内核模块移到了可选内核模块包 ("),e("code",[t._v("linux-image-extra-*")]),t._v(") ，以减少内核软件包的体积。正常安装的系统应该会包含可选内核模块包，而一些裁剪后的系统可能会将其精简掉。"),e("code",[t._v("AUFS")]),t._v(" 内核驱动属于可选内核模块的一部分，作为推荐的 Docker 存储层驱动，一般建议安装可选内核模块包以使用 "),e("code",[t._v("AUFS")]),t._v("。")]),t._v(" "),e("p",[t._v("如果14.04系统没有安装可选内核模块的话，可以执行下面的命令来安装可选内核模块包：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    linux-image-extra-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -r"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    linux-image-extra-virtual\n")])])]),e("h2",{attrs:{id:"卸载旧版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载旧版本"}},[t._v("#")]),t._v(" 卸载旧版本")]),t._v(" "),e("p",[t._v("旧版本的 Docker 称为 "),e("code",[t._v("docker")]),t._v(" 或者 "),e("code",[t._v("docker-engine")]),t._v("，使用以下命令卸载旧版本：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" remove "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n               docker-engine "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n               docker.io\n")])])]),e("h2",{attrs:{id:"apt-安装-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apt-安装-docker"}},[t._v("#")]),t._v(" APT 安装 Docker")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装系统工具")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https ca-certificates "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" software-properties-common\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 GPG证书")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 写入软件源信息")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu '),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新并安装 Docker CE")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" -y update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce\n")])])]),e("p",[t._v("以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要最新或者测试版本的 Docker CE 请将 stable 改为 edge 或者 test。从 Docker 17.06 开始，edge、test 版本的 APT 镜像源也会包含稳定版本的 Docker。")]),t._v(" "),e("h2",{attrs:{id:"脚本自动安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本自动安装"}},[t._v("#")]),t._v(" 脚本自动安装")]),t._v(" "),e("p",[t._v("在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL get.docker.com -o get-docker.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可能会出现 404 错误，请移步下面的特别说明")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" get-docker.sh --mirror Aliyun\n")])])]),e("p",[t._v("执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("特别说明")]),t._v(" "),e("p",[t._v("2018 年 7 月 21 日，貌似阿里云这边在做调整，故导致 Docker 的 Aliyun 安装脚本不可用，是永久性还是临时性的尚不清除，如果你已经按照之前的操作安装 Docker，请按以下步骤进行修复并重新安装")]),t._v(" "),e("ul",[e("li",[t._v("如果已经使用了 Aliyun 脚本安装并成功的\n"),e("ul",[e("li",[t._v("请先卸载 Docker，命令为："),e("code",[t._v("apt-get autoremove docker-ce")])]),t._v(" "),e("li",[t._v("删除 "),e("code",[t._v("/etc/apt/sources.list.d")]),t._v(" 目录下的 "),e("code",[t._v("docker.list")]),t._v(" 文件")])])]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("AzureChinaCloud")]),t._v(" 镜像脚本重新安装，命令为："),e("code",[t._v("sudo sh get-docker.sh --mirror AzureChinaCloud")])])])]),t._v(" "),e("h2",{attrs:{id:"启动-docker-ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-ce"}},[t._v("#")]),t._v(" 启动 Docker CE")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ubuntu 14.04 请使用以下命令启动：")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" start\n")])])]),e("h2",{attrs:{id:"建立-docker-用户组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组"}},[t._v("#")]),t._v(" 建立 docker 用户组")]),t._v(" "),e("p",[t._v("默认情况下，"),e("code",[t._v("docker")]),t._v(" 命令会使用 "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unix socket"),e("OutboundLink")],1),t._v(" 与 Docker 引擎通讯。而只有 "),e("code",[t._v("root")]),t._v(" 用户和 "),e("code",[t._v("docker")]),t._v(" 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 "),e("code",[t._v("root")]),t._v(" 用户。因此，更好地做法是将需要使用 "),e("code",[t._v("docker")]),t._v(" 的用户加入 "),e("code",[t._v("docker")]),t._v(" 用户组。")]),t._v(" "),e("p",[t._v("建立 "),e("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),e("p",[t._v("将当前用户加入 "),e("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gpasswd -a "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更新docker用户组")]),t._v("\n$ newgrp "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),e("p",[t._v("退出当前终端并重新登录，进行如下测试。")]),t._v(" "),e("h2",{attrs:{id:"测试docker是否安装正确"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试docker是否安装正确"}},[t._v("#")]),t._v(" 测试Docker是否安装正确")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("wenwl@ubuntu:~$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run hello-world\nUnable to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" image "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello-world:latest'")]),t._v(" locally\nlatest: Pulling from library/hello-world\nb8dfde127a29: Pull complete \nDigest: sha256:5122f6204b6a3596e048758cabba3c46b1c937a46b5be6225b835d091b90e46c\nStatus: Downloaded newer image "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" hello-world:latest\n\nHello from Docker"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". The Docker client contacted the Docker daemon.\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". The Docker daemon pulled the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-world"')]),t._v(" image from the Docker Hub.\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amd64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". The Docker daemon created a new container from that image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" runs the\n    executable that produces the output you are currently reading.\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". The Docker daemon streamed that output to the Docker client, "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" sent it\n    to your terminal.\n\nTo try something "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" ambitious, you can run an Ubuntu container with:\n $ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -it ubuntu "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\nShare images, automate workflows, and "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" with a "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" Docker ID:\n https://hub.docker.com/\n\nFor "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" examples and ideas, visit:\n https://docs.docker.com/get-started/\n\n")])])]),e("p",[t._v("若能正常输出以上信息，则说明安装成功。")]),t._v(" "),e("h2",{attrs:{id:"镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[t._v("#")]),t._v(" 镜像加速")]),t._v(" "),e("p",[t._v("鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，强烈建议安装 Docker 之后配置 "),e("code",[t._v("国内镜像加速")]),t._v("，详见 "),e("RouterLink",{attrs:{to:"/docker/6-docker-accelerator.html"}},[t._v("Docker镜像加速器")])],1),t._v(" "),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 官方 Ubuntu 安装文档"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);